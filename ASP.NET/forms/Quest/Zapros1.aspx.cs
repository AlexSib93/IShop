/*flexberryautogenerated="false"*/
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using ICSSoft.STORMNET.Business;
using ICSSoft.STORMNET.Business.LINQProvider;
using System.Linq;
using ICSSoft.STORMNET.FunctionalLanguage.SQLWhere;

namespace IIS.Интернет_магазин
{
    public partial class Запрос1 : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            Wolv.DataObjectTypes = new[] { typeof(Товар) };
            Wolv.View = Товар.Views.ТоварL;
            Wolv.Operations.New = false;
            Wolv.Operations.Edit = false;
            Wolv.Operations.EditInRow = false;
            Wolv.Operations.Delete = false;
            Wolv.Operations.DeleteInRow = false;
            var ds = (SQLDataService)DataServiceProvider.DataService;
            if ((Session["minPrice"] != null) & (Session["maxPrice"] == null))
            {
                var minPrice = Convert.ToInt32(Session["minPrice"]);
                var goods = ds.Query<Товар>(Товар.Views.ТоварL.Name).Where(g=>g.Стоимость>minPrice);
                //var goods2 = from g in goods
                //             where g.Стоимость > minPrice
                //             select g;
                Wolv.LimitFunction = LinqToLcs.GetLcs(goods.Expression, Товар.Views.ТоварL).LimitFunction;   
            }
            else
                if ((Session["minPrice"] == null) & (Session["maxPrice"] != null))
                {
                    var maxPrice = Convert.ToInt32(Session["maxPrice"]);
                    var goods = ds.Query<Товар>(Товар.Views.ТоварL.Name).Where(g => g.Стоимость < maxPrice);
                    //var goods2 = from g in goods
                    //             where g.Стоимость > minPrice
                    //             select g;
                    Wolv.LimitFunction = LinqToLcs.GetLcs(goods.Expression, Товар.Views.ТоварL).LimitFunction;
                }
                else
                    if ((Session["minPrice"] != null) & (Session["maxPrice"] != null))
                    {
                        var maxPrice = Convert.ToInt32(Session["maxPrice"]);
                        var minPrice = Convert.ToInt32(Session["minPrice"]);
                        var goods = ds.Query<Товар>(Товар.Views.ТоварL.Name).Where(g => g.Стоимость < maxPrice & g.Стоимость > minPrice);
                        //var goods2 = from g in goods
                        //             where g.Стоимость > minPrice
                        //             select g;
                        Wolv.LimitFunction = LinqToLcs.GetLcs(goods.Expression, Товар.Views.ТоварL).LimitFunction;
                    }
                    else
                Wolv.LimitFunction = SQLWhereLanguageDef.LanguageDef.GetFunction(SQLWhereLanguageDef.LanguageDef.funcSQL, "1!=1");   

        }

        protected void Button_Click(object sender, EventArgs e)
        {
            try 
            {
                int minPrice = Convert.ToInt32(Num1.StringValue);
                Session["minPrice"] = minPrice;
            }
            catch
            {
                Session["minPrice"] = null;
            }
           
            try
            {
                int maxPrice = Convert.ToInt32(Num2.StringValue);
                Session["maxPrice"] = maxPrice;
            }
            catch
            {
                Session["maxPrice"] = null;
            }
            Response.Redirect(Request.Url.ToString());
        }
    }
}
